FROM python:3.11-slim-bullseye as base

LABEL org.opencontainers.image.authors="samuel.scott.jennings@gmail.com"
LABEL "com.example.vendor"="Geoluminate"
LABEL version="0.0.1"
LABEL description="This is a lightweight version of the \
    Global Heat Flow Database web application that uses minimal \
    resources for portability."

ENV PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    DJANGO_SETTINGS_MODULE=config.settings.lite

WORKDIR /app

# ====================== BUILD STAGE ============================
FROM base as builder

ENV POETRY_VERSION=1.3.1

# Install apt packages
RUN apt-get update && apt-get install --no-install-recommends -y \
  libcairo2 libcairo2-dev \
  # dependencies for building Python packages
  build-essential && \
  # install poetry for dependencies
  pip install "poetry==$POETRY_VERSION"

COPY pyproject.toml poetry.lock ./

 # build requirements.txt file
RUN poetry export -o requirements.txt --without dev,docs && \
    # Create Python Dependency and Sub-Dependency Wheels.
    pip wheel --wheel-dir /usr/src/app/wheels \
      -r requirements.txt

FROM base as final

RUN apt-get update && apt-get install --no-install-recommends -y \
  libcairo2 libcairo2-dev \
  # Translations dependencies
  gettext \
  # geodjango dependencies
  binutils libproj-dev gdal-bin \
  # spatialite dependencies
  libsqlite3-mod-spatialite && \
  # cleaning up unused files
  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
  && rm -rf /var/lib/apt/lists/*

# copy python dependency wheels from python-build-stage
COPY --from=builder /usr/src/app/wheels /wheels/

# use wheels to install python dependencies
RUN pip install --no-cache-dir --no-index --find-links=/wheels/ /wheels/* \
	&& rm -rf /wheels/

COPY . /app

RUN python manage.py makemigrations && \
    python manage.py migrate && \
    python manage.py init_superuser && \
    python manage.py collectstatic --noinput && \
    python manage.py compress

EXPOSE 8000

ENTRYPOINT [ "python", "manage.py", "runserver", "0.0.0.0:8000" ]
