version: '3'
name: geoluminate

volumes:
  postgres_data: {}
  postgres_data_backups: {}
  media: {}

services:

  django: &django
    build:
      context: .
      dockerfile: ./compose/geoluminate/local
    image: local_django
    depends_on:
      - postgres
      - redis
      - minio
    # working_dir: /app
    volumes:
      - ../:/external_apps
      - ./:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - 8000:8000
      - 5678:5678
    command: /app/bin/local/django
    entrypoint: /app/bin/entrypoint
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: production_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  redis:
    image: redis:6
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  # celeryworker:
  #   <<: *django
  #   ports: []
  #   command: /app/bin/local/celery_worker
  #   logging:
  #     options:
  #       max-size: "10m"
  #       max-file: "5"
  # celerybeat:
  #   <<: *django
  #   ports: []
  #   command: /app/bin/local/celery_beat
  #   logging:
  #     options:
  #       max-size: "10m"
  #       max-file: "5"
  # flower:
  #   <<: *django
  #   ports:
  #     - "5555:5555"
  #   command: /app/bin/local/celery_flower
  #   logging:
  #     options:
  #       max-size: "10m"
  #       max-file: "5"

  minio:
    image: quay.io/minio/minio:latest
    volumes:
      # - ./minio:/minio
      - media:/minio
    env_file:
      - ./.envs/.local/.minio
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /minio
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  # docs:
  #   <<: *django
  #   working_dir: /app/docs
  #   ports:
  #     - "5000:5000"
  #   command: /app/bin/local/docs

  node:
    build:
      context: .
      dockerfile: ./compose/node/Dockerfile
    image: local_node
    depends_on:
      - django
    volumes:
      - ./:/app:z
      - /app/node_modules
    command: npm run dev
    ports:
      - '3000:3000'
