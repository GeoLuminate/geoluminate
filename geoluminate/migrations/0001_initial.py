# Generated by Django 4.2 on 2023-05-04 13:03

import django.db.models.deletion
import django.utils.timezone
import django_better_admin_arrayfield.models.fields
import filer.fields.image
import literature.fields
import meta.models
import model_utils.fields
from django.conf import settings
from django.db import migrations, models

import geoluminate.db.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        (
            "literature",
            "0005_remove_literature_pid_remove_literature_pid_type_and_more",
        ),
        ("sites", "0002_alter_domain_unique"),
    ]

    operations = [
        migrations.CreateModel(
            name="GlobalConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lockdown_enabled",
                    models.BooleanField(
                        choices=[(True, "Admin only"), (False, "Public")],
                        default=False,
                        help_text="Locks down the entire application so that only administrators can log in.",
                        verbose_name="Access rights",
                    ),
                ),
                (
                    "enable_api",
                    models.BooleanField(
                        choices=[(True, "Enabled"), (False, "Disabled")],
                        default=True,
                        help_text="Enable or disable access to the database API.",
                        verbose_name="Status",
                    ),
                ),
                (
                    "custodian",
                    models.OneToOneField(
                        blank=True,
                        limit_choices_to={"is_staff": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="custodian",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="custodian",
                    ),
                ),
                (
                    "icon",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "logo",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Logo",
                    ),
                ),
                (
                    "site",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration",
                "db_table": "global_config",
            },
        ),
        migrations.CreateModel(
            name="Geoluminate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "pid",
                    geoluminate.db.fields.PIDField(
                        alphabet="23456789ABCDEFGHJKLMNPQRSTUVWXYZ",
                        blank=True,
                        length=10,
                        max_length=16,
                        prefix="GHFDB-",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="General comments regarding the site and/or measurement",
                        null=True,
                        verbose_name="comment",
                    ),
                ),
                (
                    "acquired",
                    models.DateTimeField(
                        help_text="Date and time of acquisition.",
                        null=True,
                        verbose_name="date acquired",
                    ),
                ),
                (
                    "literature",
                    literature.fields.LiteratureM2M(
                        blank=True,
                        help_text="Associated literature.",
                        to="literature.literature",
                        verbose_name="literature",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "permissions": [
                    (
                        "geoluminate_database_admin",
                        "Can create, view, update or delete any model associated with the research database",
                    )
                ],
                "abstract": False,
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
    ]
