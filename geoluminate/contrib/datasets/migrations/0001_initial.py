# Generated by Django 5.0.7 on 2024-08-13 13:34

import django.db.models.deletion
import django_bleach.models
import geoluminate.contrib.core.models
import geoluminate.contrib.datasets.choices
import geoluminate.contrib.datasets.models
import geoluminate.contrib.projects.choices
import geoluminate.db.fields
import imagekit.models.fields
import licensing.fields
import meta.models
import research_vocabs.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contributors", "0001_initial"),
        ("licensing", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Date",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                ("date", geoluminate.db.fields.PartialDateField(verbose_name="date")),
                (
                    "type",
                    research_vocabs.fields.ConceptField(
                        max_length=9,
                        verbose_name="type",
                        vocabulary=geoluminate.contrib.projects.choices.ProjectDates,
                    ),
                ),
            ],
            options={
                "verbose_name": "date",
                "verbose_name_plural": "dates",
                "abstract": False,
                "default_related_name": "dates",
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="Description",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                ("text", django_bleach.models.BleachField()),
                (
                    "type",
                    research_vocabs.fields.ConceptField(
                        max_length=17,
                        verbose_name="type",
                        vocabulary=geoluminate.contrib.datasets.choices.DatasetDescriptions,
                    ),
                ),
            ],
            options={
                "verbose_name": "description",
                "verbose_name_plural": "descriptions",
                "abstract": False,
                "default_related_name": "descriptions",
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="Identifier",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="identifier"
                    ),
                ),
                (
                    "scheme",
                    models.CharField(
                        choices=[
                            ("ARK", "ARK"),
                            ("arXiv", "arXiv"),
                            ("bibcode", "bibcode"),
                            ("DOI", "DOI"),
                            ("EAN13", "EAN13"),
                            ("EISSN", "EISSN"),
                            ("Handle", "Handle"),
                            ("IGSN", "IGSN"),
                            ("ISBN", "ISBN"),
                            ("ISSN", "ISSN"),
                            ("ISTC", "ISTC"),
                            ("LISSN", "LISSN"),
                            ("LSID", "LSID"),
                            ("PMID", "PMID"),
                            ("PURL", "PURL"),
                            ("UPC", "UPC"),
                            ("URL", "URL"),
                            ("URN", "URN"),
                        ],
                        max_length=16,
                        verbose_name="scheme",
                    ),
                ),
            ],
            options={
                "verbose_name": "identifier",
                "verbose_name_plural": "identifiers",
                "abstract": False,
                "default_related_name": "identifiers",
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="Contribution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "roles",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Assigned roles for this contributor.",
                        null=True,
                        verbose_name="roles",
                    ),
                ),
                (
                    "store",
                    models.JSONField(
                        default=dict,
                        help_text="A JSON representation of the contributor profile at the time of publication",
                        verbose_name="contributor",
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=geoluminate.contrib.core.models.contributor_permissions_default,
                        help_text="A JSON representation of the contributor's permissions at the time of publication",
                        verbose_name="permissions",
                    ),
                ),
                (
                    "contributor",
                    models.ForeignKey(
                        help_text="The person or organisation that contributed to the project or dataset.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)ss",
                        related_query_name="%(app_label)s_%(class)s",
                        to="contributors.contributor",
                        verbose_name="contributor",
                    ),
                ),
            ],
            options={
                "verbose_name": "contributor",
                "verbose_name_plural": "contributors",
                "abstract": False,
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        blank=True,
                        help_text="Item options.",
                        null=True,
                        verbose_name="options",
                    ),
                ),
                (
                    "image",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        upload_to=geoluminate.contrib.datasets.models.dataset_image_path,
                        verbose_name="image",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "visibility",
                    models.IntegerField(
                        choices=[(0, "Private"), (1, "Public")],
                        default=0,
                        help_text="Visibility within the application.",
                        verbose_name="visibility",
                    ),
                ),
                (
                    "contributors",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The contributors to this dataset.",
                        related_query_name="dataset",
                        through="datasets.Contribution",
                        to="contributors.contributor",
                        verbose_name="contributors",
                    ),
                ),
                (
                    "license",
                    licensing.fields.LicenseField(
                        blank=True,
                        help_text="the license under which this content is published",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="licensing.license",
                        verbose_name="license",
                    ),
                ),
            ],
            options={
                "verbose_name": "dataset",
                "verbose_name_plural": "datasets",
                "default_related_name": "datasets",
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
    ]
