from rest_framework_gis import filters


class DistanceToPointOrderingFilter(filters.DistanceToPointOrderingFilter):
    def get_schema_operation_parameters(self, view):
        params = super().get_schema_operation_parameters(view)
        params.append(
            {
                "name": self.order_param,
                "required": False,
                "in": "query",
                "description": "",
                "schema": {
                    "type": "enum",
                    "items": {"type": "string", "enum": ["asc", "desc"]},
                    "example": "desc",
                },
                "style": "form",
                "explode": False,
            }
        )
        return params


def public_api(endpoints):
    """A filter function that will exclude urls generated by this package
    from being included in any API documentation generated using
    `drf-spectacular <https://github.com/tfranzel/drf-spectacular>`_.

    You can use this function by placing it in your `SPECTACULAR_SETTINGS`
    config dictionary under `PREPROCCESSING_HOOKS`. E.g.

    .. code:: python


    "PREPROCESSING_HOOKS": [
        "datatables.spectacular.preprocessing_filter_spec"
    ],


    """
    filtered = []
    for path, path_regex, method, callback in endpoints:
        # Remove all but DRF API endpoints
        if path.startswith("/api/"):
            filtered.append((path, path_regex, method, callback))
        # filtered.append((path, path_regex, method, callback))
    return filtered
