# Generated by Django 4.2.4 on 2023-09-14 11:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import geoluminate.contrib.user.managers
import taggit.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text=(
                            "Designates whether this user should be treated as active. Unselect this instead of"
                            " deleting accounts."
                        ),
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="email address")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text=(
                            "The groups this user belongs to. A user will get all permissions granted to each of their"
                            " groups."
                        ),
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", geoluminate.contrib.user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="A profile image for the contributor.",
                        null=True,
                        upload_to="profile_images/",
                        verbose_name="profile image",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="This name is displayed publicly within the website.",
                        max_length=512,
                        verbose_name="display name",
                    ),
                ),
                ("about", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                (
                    "lang",
                    models.CharField(
                        blank=True,
                        help_text="Language of the contributor.",
                        max_length=255,
                        null=True,
                        verbose_name="language",
                    ),
                ),
                (
                    "interests",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A list of research interests for the contributor.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="interests",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Invitations",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("accepted", models.BooleanField(default=False, verbose_name="accepted")),
                ("key", models.CharField(max_length=64, unique=True, verbose_name="key")),
                ("sent", models.DateTimeField(null=True, verbose_name="sent")),
                (
                    "inviter",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Identifier",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("identifier", models.CharField(max_length=255, verbose_name="identifier")),
                ("scheme", models.CharField(max_length=255, verbose_name="scheme")),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="identifiers", to="user.profile"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="profile",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user",
                to="user.profile",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
