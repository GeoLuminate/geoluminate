# Generated by Django 5.0.7 on 2024-08-13 13:34

import django.db.models.deletion
import django_bleach.models
import geoluminate.contrib.contributors.models
import imagekit.models.fields
import meta.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contributor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "image",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        upload_to=geoluminate.contrib.contributors.models.profile_image_path,
                        verbose_name="profile image",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="This name is displayed publicly within the website.",
                        max_length=512,
                        verbose_name="display name",
                    ),
                ),
                (
                    "alternative_names",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Any other names by which the contributor is known.",
                        null=True,
                        verbose_name="alternative names",
                    ),
                ),
                ("about", django_bleach.models.BleachField(blank=True, null=True)),
                (
                    "lang",
                    models.CharField(
                        blank=True,
                        help_text="Language of the contributor.",
                        max_length=255,
                        null=True,
                        verbose_name="language",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "contributor",
                "verbose_name_plural": "contributors",
                "ordering": ["name"],
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="Identifier",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="identifier"
                    ),
                ),
                (
                    "scheme",
                    models.CharField(
                        choices=[
                            ("https://orcid.org/", "ORCID"),
                            ("ResearcherID", "ResearcherID"),
                            ("ROR", "ROR"),
                            ("GRID", "GRID"),
                            ("Wikidata", "Wikidata"),
                            ("ISNI", "ISNI"),
                            ("Crossref Funder ID", "Crossref Funder ID"),
                        ],
                        max_length=32,
                        verbose_name="scheme",
                    ),
                ),
                (
                    "object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contributors.contributor",
                    ),
                ),
            ],
            options={
                "verbose_name": "identifier",
                "verbose_name_plural": "identifiers",
                "abstract": False,
                "default_related_name": "identifiers",
                "unique_together": {("scheme", "identifier")},
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
    ]
