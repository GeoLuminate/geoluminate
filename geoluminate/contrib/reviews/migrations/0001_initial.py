# Generated by Django 4.2.11 on 2024-03-27 13:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import meta.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("geoluminate", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("literature", "0002_alter_literature_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Universally unique identifier for this record.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "In progress"), (1, "Submitted"), (2, "Accepted")],
                        default=0,
                        help_text="Status of the review",
                        verbose_name="status",
                    ),
                ),
                (
                    "submitted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date the user submitted correction for final approval by site admins",
                        null=True,
                        verbose_name="date submitted",
                    ),
                ),
                (
                    "accepted",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date the review was accepted by site admins and incorporated into the production database",
                        null=True,
                        verbose_name="date accepted",
                    ),
                ),
                (
                    "dataset",
                    models.OneToOneField(
                        help_text="Dataset being reviewed",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geoluminate.dataset",
                    ),
                ),
                (
                    "literature",
                    models.OneToOneField(
                        help_text="Literature being reviewed",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="literature.literature",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        help_text="User reviewing this publication",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
    ]
