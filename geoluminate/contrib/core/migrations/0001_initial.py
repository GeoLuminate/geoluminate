# Generated by Django 4.2.11 on 2024-03-11 15:15

from django.db import migrations, models
import django.db.models.deletion
import django_bleach.models
import meta.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Universally unique identifier for this record.', unique=True, verbose_name='UUID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When this record was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='When this record was last modified.', verbose_name='Modified')),
                ('identifier', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='identifier')),
                ('scheme', models.CharField(choices=[('IGSN', 'IGSN'), ('DOI', 'DOI'), ('ISBN', 'ISBN'), ('ISSN', 'ISSN'), ('URL', 'URL'), ('ARK', 'ARK'), ('arXiv', 'arXiv'), ('bibcode', 'bibcode'), ('EAN13', 'EAN13'), ('EISSN', 'EISSN'), ('Handle', 'Handle'), ('ISTC', 'ISTC'), ('LISSN', 'LISSN'), ('LSID', 'LSID'), ('PMID', 'PMID'), ('PURL', 'PURL'), ('UPC', 'UPC'), ('URN', 'URN'), ('ROR', 'ROR'), ('GRID', 'GRID'), ('Wikidata', 'Wikidata'), ('ISNI', 'ISNI'), ('Crossref Funder ID', 'Crossref Funder ID')], max_length=255, verbose_name='scheme')),
            ],
            options={
                'verbose_name': 'identifier',
                'verbose_name_plural': 'identifiers',
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name='FuzzyDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('type', models.CharField(choices=[('proposed_start', 'Proposed start'), ('proposed_end', 'Proposed end'), ('start', 'Start'), ('end', 'End'), ('collection_start', 'Collection start')], default='proposed_start', help_text='The type of date.', max_length=255, verbose_name='type')),
                ('date', models.DateTimeField(help_text='The date.', verbose_name='date')),
                ('year', models.PositiveIntegerField(blank=True, help_text='The year.', null=True, verbose_name='year')),
                ('month', models.PositiveIntegerField(blank=True, help_text='The month.', null=True, verbose_name='month')),
                ('day', models.PositiveIntegerField(blank=True, help_text='The day.', null=True, verbose_name='day')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'key date',
                'verbose_name_plural': 'key dates',
                'ordering': ['date'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='core_fuzzyd_content_1aa9ad_idx')],
                'unique_together': {('type', 'content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('type', models.CharField(max_length=32, verbose_name='type')),
                ('text', django_bleach.models.BleachField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'description',
                'verbose_name_plural': 'descriptions',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='core_descri_content_af59ce_idx')],
                'unique_together': {('type', 'content_type', 'object_id')},
            },
        ),
    ]
